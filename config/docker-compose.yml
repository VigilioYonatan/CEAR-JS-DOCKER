version: "3.8"

services:
    app:
        container_name: app
        restart: unless-stopped
        ports:
            - ${PORT}:${PORT}
        environment:
            - NODE_ENV=production
            - PORT=${PORT}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASS=${DB_PASS}
        depends_on:
            - postgres
        volumes:
            - ./:/app
            - /app/node_modules
        networks:
            - app-network

    # PostgreSQL Database
    postgres:
        image: postgres:17.6-alpine3.21
        container_name: postgres_db
        restart: unless-stopped
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASS}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - ${DB_PORT}:5432
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - app-network

    # Nginx Reverse Proxy
    nginx:
        image: nginx:1.29.1-alpine
        container_name: nginx_proxy
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            # - ./nginx/ssl:/etc/nginx/ssl # For SSL certificates (optional)
        depends_on:
            - app
        networks:
            - app-network

volumes:
    postgres_data:

networks:
    app-network:
        driver: bridge
